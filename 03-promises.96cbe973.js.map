{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,uBAChCC,OAAQF,SAASC,cAAc,sBAC/BE,SAAUH,SAASC,cAAc,wBACjCG,OAAQJ,SAASC,cAAc,SAGjC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPT,EAAKM,OAAOW,iBAAiB,UAAU,SAAAC,GACrCA,EAAMC,iBAON,IALA,IAAMC,EAAaC,SAASrB,EAAKC,QAAQqB,OACnCC,EAAOF,SAASrB,EAAKI,OAAOkB,OAC5BE,EAASH,SAASrB,EAAKK,SAASiB,OAClCG,EAAeL,EAEVM,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAElCnB,EADiBmB,EAAI,EACGD,GACrBE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA/B,GAASgC,OAAOC,QAAQ,qBAAoCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEnEwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA/B,GAASgC,OAAOI,QAAQ,oBAAmCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAErEgB,GAAgBF,C,CAElBvB,EAAKM,OAAO6B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n  formEl: document.querySelector('form'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.formEl.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const firstDelay = parseInt(refs.delayEl.value);\n  const step = parseInt(refs.stepEl.value);\n  const amount = parseInt(refs.amountEl.value);\n  let currentDelay = firstDelay;\n\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    currentDelay += step;\n  }\n  refs.formEl.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delayEl","document","querySelector","stepEl","amountEl","formEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","firstDelay","parseInt","value","step","amount","currentDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.96cbe973.js.map"}